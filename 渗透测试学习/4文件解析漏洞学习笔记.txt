文件解析漏洞：
	解析漏洞主要说的是一些特殊文件被iis.apache,nigin 解释成脚本文件格式的漏洞
	iis 6.0 7.0.7.5-windows server2003   8.0.8.5-2008   10.0-2016
	iis6.0 漏洞
		1目录解析:/xx.asp/xx.jpg 如果以脚本形式命名目录，则服务器以脚本形式执行目录下所有文件
		2 分号解析（xx.asp;.jpg）算是两个文件
		3畸形文件名解析 xx.asa，xx.cer,xx.cdx会以asp脚本执行
	iis7.0,7.5,niginx <8.03版本
		在默认Fast-CGI开启状态下，上传一个内容为《？PHP fputs（fopen（'shell.php','w'）,'《？php eval($_POST[cmd])?>'）;?>
		的xx.jpg,然后访问xx.jpg/.php，就会在该目录下生成一句话木马shell.php

		
	apache漏洞
		从左到右判断解析,直到能识别为止（所以 xx.php.）可以绕过黑名单

		htaccess文件解析：.htaccess文件如果可以上传，则写入《FilesMatch"shell.jpg"》SetHandler application/x-httpd-php</FilesMatch>
				然后再上传shell.jpg牧马，这样可以解析shell.jpg为php

上传本地验证绕过：文件以post形式提交给web服务器，服务器同意后则开始连接传输
	服务器命名规则;
		RULE1:上传文件名和服务器命名一致
		rule2：不一致时，随机/时间日期命名等
	上传检测方式
		1客户端js检验（通常检测文件拓展名）
			绕过方式:1直接console中修改校验规则
			              2 先上传xx.jap 在bp获取的包中修改为脚本类型xx.php

		2服务端MIME类型检测（检测Content-Type）
			绕过方式：1BP抓包 ,修改给web服务器发送包的conten-type的类型，欺骗MIME类型检测
				
		3服务端目录路径检测：上传到一个没有执行权限的目录中比如upload/xx.asp
			绕过方式：修改文件名：../../xx.asp
				修改文件上传路径
					filepath路径修改绕过

		4服务端扩展名检测
			绕过方式：黑名单绕过
					1文件名大小写绕过（.Asp ）
					2畸形文件名（asa，）
					3加载后缀列表m.txt(asa,cer) 安全狗中的后缀，然后上传一张图片
					BP抓包 ，进入intruder 选取后缀作为变量名 add 一个payload加载
					该m.txt 然后开始攻击，410允许上传
								
						
		5服务端文件内容检测（是否含有恶意代码）
			双文件上传:上传一个文件1.jpg ，抓包 转到Repeater ，负责文件内容一遍		绕过二次渲染
	
		
			
		

	