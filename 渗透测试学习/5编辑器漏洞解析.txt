 编辑器利用：
	查找编辑器目录：
		目录扫描
			找到编辑器目录：利用目录扫描工具(御剑)-editor edit fckeditor
			尽量找到上传页面up.html 

		目录遍历
		蜘蛛爬行
			awvs，菜刀
			inurl:xx.com inurl:editor
	漏洞利用：
		百度相关编辑器漏洞利用

	脆弱性描述：
		FCKeditor v2.4.3中File类型默认拒绝上传类型（html.htm,php,php2,php3,php4,php5,pwml,inc,asp.aspx,ascx.jsp）
		ewebeditor	
			1进后台：跑弱口令	
			2下载默认数据库：ewebeditor/db/ewebeditor.mdb
			3burp抓包爆破
			4注入点得到密码
		如果没有后台
			利用目录遍历漏洞（御剑），找数据库 

	绕过asp;,jpg变asp_jpg




参与人数：2个人，组长和我
项目描述：该项目是给白鹤滩内部人员使用的办公OA系统，其中包含了许多绝密信息 ，此次测试有测试账号
项目工具: 御剑(跑目录版本)，goolehack语法，hackbar，awvs， burp，nmap， sqlmap ，自己搭建的XSS平台，反序列漏洞测试工具ysoserial  ，一句话集合，jsp大小马，菜刀Java版本等 
所用技术：1. 我开始没有使用测试账号，做信息收集时通过旁站C段得知该网站容器为apache tomcat7 ,结构为后台Java（SSM）+jsp, 该服务器上只有该站一个独立站，没有使用CDN/BGP(ip为真实的),通过Linux大小写的敏感得知容器部署在Linux上，通过nmap的syn扫描 此ip开启了1521的端口(DB=Oracle) 
	2. 得到这些信息之后，我们采取了各种弱口令的爆破(包括各种条件生成的弱口令)爆破无解，这里我才知道为啥有测试账号了，我们把目光瞄准了Struts2的漏洞，用K8 struts2 exp最新版本测试了该可能存在漏洞的所有找出来(存在前后台交互的地方都存在这种请求)的'.do'和‘.action’扫描依然无果
	3. 在之前的黑盒测试都失败之后我们通过测试账号登录了系统，先找到各种上传入口，交互处做标记点，我们在这些交互的地方先用awvs跑了可能存在风险的点，并且使用了sqlmap进行注入扫描，根据软件提示的注入点之后进行的手工，后台发现是误报了，到目前为止渗透测试一无所获
	4.于是组长把目光盯在了反序列化上面，对于Java这种面向对象处理事情的语言，反序列化非常常见，所以我们找了很多需要将数据转换为对象入库的地方，比如导入模板文件、登录、格式化日志等功能中，我们使用抓包工具讲这些反序列数据一一抓取，放在一个txt文件中，然后使用反序列漏洞测试工具ysoserial 测试
	  最后测试出在上传模板处，ysoserial工具通过反序列化漏洞执行了我设置的系统命令(这个工具的原理尝试插一段带有你设置的exec 的命令进去，看是否可以反序列化成功，若成功则执行该Java代码执行命令)
所遇到的问题：遇到的问题太多了，第一次渗透Java网站，虽然我做了三年多的Java开发，但是以这个角度去看待这门语言还是第一次，都是组长的思路引导着我
解决问题：这次测试花费了很多时间，后来得知这个网站之前就加固过一次，这次发现的问题是，新加的功能，可能程序员在引入jar包，没有太注意导致的
其他感悟：这次渗透测试对于我来说是一个宝贵的经验，虽然大部分的工作都是组长完成了，我只是提供了体力上的帮助，但是老大的那种精神却是很让人佩服
所学到的知识：对于互联网这行，我觉得开发只不过是皮毛而已，在渗透测试的时候，思路和方向应该根据现有的线索实时变化


参与人数：2个人，我的组长和我
项目描述：该项目是上线给乌东德水电站实时上报和控制水电站各个安全特征值的，如果出现问题，会造成非常严重的后果
项目工具: 御剑相关工具，awvs， burp，nmap， sqlmap ，自己搭建的XSS平台，一句话集合，大小马等
所用技术：1拿到测试url后，做了各种信息收集发现该系统为window 系统是由php+mysql iis7.0，有waf，通过burp和httpfuzzer工具跑了在waf阈值内跑各种弱口令集，结果跑出来弱口令为登录名和密码为:adminzqk /pass;  2登录系统后，找到各种上传入口，发现只是做了客户端的上传校验，修改f12中代码就简单上传了各种一句话木马(这里花费了很多时间来处理上传的脚本无法被识别的问题以及绕过waf)，通过菜刀拿到了shell；3对php重要模块进行了源代码审计和AWVS的扫描，修复了多处可能存在XSS和sql注入的地方
所遇到的问题：弱口令爆破的时候用了很多字典，还是爆破不出来，于是花了很多时间去通过关键字生成字典才找到adminzqk这个适配的弱口令
解决问题：有组长给我提供思路，一种思路不行就换一种思路
其他感悟：渗透测试了解网站的安全性就如同了解一个人一样，了解一个人往往不是直来直去的，比如得知网站属于那种CMS，就去了解该种CMS如何去破解，再去研究这个站一样
所学到的知识：对于这次渗透测试我感觉在信息搜集方面是最重要的，比如 网站用的是那家的waf，这个让我们很快的绕过了waf，开发人员喜欢使用的密码方面联系上zqk就是我们公司名称的简写之类的，其次就是源代码审计作用了，这次能很快的加固管理系统，代码审计工作起到了很大的作用
